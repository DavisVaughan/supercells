% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/supercells.R
\name{supercells}
\alias{supercells}
\title{Creates supercells}
\usage{
supercells(
  x,
  k,
  compactness,
  dist_fun = "euclidean",
  clean = TRUE,
  iter = 10,
  transform = NULL
)
}
\arguments{
\item{x}{An object of class SpatRaster (terra)}

\item{k}{The number of supercells desired by the user (the output number can be slightly different!)}

\item{compactness}{A compactness value. Larger values cause clusters to be more compact/even (square).
A compactness value depends on the range of input cell values and selected distance measure.}

\item{dist_fun}{A distance function. Currently implemented distance functions are "euclidean" and "jensen_shannon". Default: "euclidean"}

\item{clean}{Should connectivity of the supercells be enforced?}

\item{iter}{The number of iterations performed to create the output.}

\item{transform}{Transformation to be performed on the input. Currently implemented is "to_LAB" allowing to convert RGB raster to a raster in the LAB color space. By default no transformation is performed.}
}
\value{
An sf object with several columns: (1) supercells - an id of each supercell, (2) y and x coordinates, (3) one or more columns with average values of given variables in each supercell
}
\description{
Creates supercells based on single- or multi-band spatial raster data. It uses a modified version of the SLIC Superpixel algorithm by Achanta et al. (2012), allowing specification of a distance function.
}
\examples{
library(supercells)
library(terra)
library(sf)
# One variable

vol = rast(system.file("raster/volcano.tif", package = "supercells"))
vol_slic1 = supercells(vol, k = 50, compactness = 1)
plot(vol)
plot(st_geometry(vol_slic1), add = TRUE, lwd = 0.2)

# RGB variables

#ortho = rast(system.file("raster/ortho.tif", package = "supercells"))
#ortho_slic1 = supercells(ortho, k = 200, compactness = 10)
#plot(ortho)
#plot(st_geometry(ortho_slic1), add = TRUE)

### RGB variables - colored output

#rgb_to_hex = function(x){
#  apply(t(x), 2, function(x) rgb(x[1], x[2], x[3], maxColorValue = 255))
#}
#avg_colors = rgb_to_hex(st_drop_geometry(ortho_slic1[4:6]))

#plot(ortho)
#plot(st_geometry(ortho_slic1), add = TRUE, col = avg_colors)
}
\references{
Achanta, R., Shaji, A., Smith, K., Lucchi, A., Fua, P., & Süsstrunk, S. (2012). SLIC Superpixels Compared to State-of-the-Art Superpixel Methods. IEEE Transactions on Pattern Analysis and Machine Intelligence, 34(11), 2274–2282. https://doi.org/10.1109/tpami.2012.120
}
